#!/bin/bash

path=`dirname $0`
. ${path}/ofctl.conf

while getopts d:u:f:h OPT
do
    case $OPT in
	"d" )
	    dpid="${OPTARG}";;
	"u" )
	    url="${OPTARG}";;
	"f")
	    filter="${OPTARG}";;
	"h" )
	    echo "Usage: $CMDNAME [-d DPID] [-u URL] [-f filter]"
	    exit 0 ;;
	* )
	    echo "Usage: $CMDNAME [-d DPID] [-u URL] [-f filter]" 1>&2
	    exit 1 ;;
    esac
done


if ! ${path}/check_dpid | grep ${dpid} > /dev/null ; then
    echo "Cannot find the swith ${dpid}"
    exit 1
fi

if [ -n "${filter}" ] ; then
    curl -s -X POST -d ${filter} ${url}/stats/flow/${dpid} ${CURL_OPT} | jq -c -M '.["'${dpid}'"][]' > /tmp/check_flow.json
else
    curl -s -X GET ${url}/stats/flow/${dpid} ${CURL_OPT} | jq -c -M '.["'${dpid}'"][]' > /tmp/check_flow.json
fi

if [ -s /tmp/check_flow.json ] ; then
    tables=( `jq -c '.table_id' < /tmp/check_flow.json | sort -n | uniq` )
    for table_id in ${tables[@]} ;
    do
	echo "table ${table_id}"
	jq -c -M 'select(.table_id == '${table_id}') | {'${show_field}'}' < /tmp/check_flow.json
    done
    echo ""
fi

curl -s -X GET ${url}/stats/groupdesc/${dpid} ${CURL_OPT} | jq -c -M '.["'${dpid}'"] | sort_by(.group_id) | .[]' > /tmp/check_flow.json
curl -s -X GET ${url}/stats/group/${dpid} ${CURL_OPT} | jq -c -M '.["'${dpid}'"] | sort_by(.group_id) | .[]' > /tmp/check_flow2.json
if [ -s /tmp/check_flow.json ] ; then
    echo "group table"
    IFS=$'\n'
    flows_array=(`cat /tmp/check_flow.json`)
    i=0
    while read line
    do
	jq -c -M -s add <(echo ${line}) <(echo ${flows_array[i]})
	let i++
    done < /tmp/check_flow2.json
    echo ""
fi

curl -s -X GET ${url}/stats/meterconfig/${dpid} ${CURL_OPT} | jq -c -M '.["'${dpid}'"] | sort_by(.meter_id) | .[]' > /tmp/check_flow.json
curl -s -X GET ${url}/stats/meter/${dpid} ${CURL_OPT} | jq -c -M '.["'${dpid}'"] | sort_by(.meter_id) | .[]' > /tmp/check_flow2.json
if [ -s /tmp/check_flow.json ] ; then
    echo "meter table"
    IFS=$'\n'
    flows_array=(`cat /tmp/check_flow.json`)
    i=0
    while read line
    do
	jq -c -M -s add <(echo ${line}) <(echo ${flows_array[i]})
	let i++
    done < /tmp/check_flow2.json
    echo ""
fi

